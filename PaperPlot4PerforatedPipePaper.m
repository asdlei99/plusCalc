function dataCell = PaperPlot4PerforatedPipePaperclc;close all;clear;currentPath = fileparts(mfilename('fullpath'));%% 加载实验数据expRealX = [2.5,3.5,5.87,6.37,6.87,7.37,7.87,8.37,8.87,9.37,9.87,10.37,10.87];expFileFolder = fullfile(currentPath,'../../【论文】孔管/数据/实验原始数据/');expResCell = loadExpDatas(expFileFolder);simulateFileFolder = fullfile(currentPath,'../../【论文】孔管/数据/模拟数据/');%实验数据关键测点对应索引IndexPlusMean = 8;IndexPlusMax = 9;IndexPlusMin = 10;IndexStd = 13;%测点映射sectionMap.simPerforatedPipeSectionMap2Exp = [4,5,6,8,9,10,11,12,13,14,15,17,19];sectionMap.simOneVesselSectionMap2Exp = [3,4,5,7,8,9,10,11,12,13,14,16,18];%% 加载或计算理论数据recalc = 0;%是否重新计算理论数据，如果改变了fun_vesselInBiasHaveInnerPerfBothClosedComp_ite_perforatedRate的参数，需要设置为1[resN1,resLp1,resDin,resDp1,resVessel,expTheoryResult,expTheoryOneVessel] = getTheoryResult(recalc);%获取理论的数据% % %% 绘制缓冲罐和孔管N=68的实验压力脉动峰峰值对比图% figureCount = 1;% plotFigureExpResult(expResCell(1:2,:),IndexPlusMean,IndexPlusMax,IndexPlusMin,IndexStd,1);% % %% 绘制使用的3d频谱和2倍频的对比% figureCount = figureCount + 1;% oneVesselDatafullFilePath = fullfile(expFileFolder,'无内件缓冲罐/[1]20160902无内件缓冲罐重做开机420转带压-1.mat');% perforatedPipeDatafullFilePath = fullfile(expFileFolder,'孔管0.5D两端堵N=68/[1]20160902缓冲罐内插0.5D孔管中间全堵开机420转带压-5.mat');% oneVesselMeanDataPath = fullfile(expFileFolder,'无内件缓冲罐');% perforatedPipeMeanDataPath = fullfile(expFileFolder,'孔管0.5D两端堵N=68');% simulateOneVesselMatDataPath = fullfile(simulateFileFolder,'无内件缓冲罐/无内件缓冲罐.mat');% section = 1:13;%绘图的测点% plot3DSpectrumAndOrder(oneVesselDatafullFilePath...%     ,perforatedPipeDatafullFilePath...%     ,oneVesselMeanDataPath...%     ,perforatedPipeMeanDataPath...%     ,simulateOneVesselMatDataPath...%     ,section);%% 绘制理论 模拟 实验对比%实验抑制装置expSuppressor.plus = expResCell{3,2}(:,IndexPlusMean);%N=20的实验数据expSuppressor.x = expRealX;%实验缓冲罐expVesssel.plus = expResCell{1,2}(:,IndexPlusMean);%N=20的实验数据expVesssel.x = expRealX;%理论抑制装置theSuppressor.plus = expTheoryResult{2,4};theSuppressor.x = expTheoryResult{2,3};%理论缓冲罐theVesssel.plus = expTheoryOneVessel{2,4};theVesssel.x = expTheoryOneVessel{2,3};plotTheorySimulationExperment(expSuppressor,expVesssel,theSuppressor,theVesssel);%% 绘制理论 - 不同开孔率的压力脉动最大值plotTheoryPerforatedRate(resN1,resLp1,resDin,resDp1);endfunction plotTheorySimulationExperment(expSuppressor,expVesssel,theSuppressor,theVesssel)    figure    plot(expSuppressor.x,expSuppressor.plus,'-o');    hold on;    plot(theSuppressor.x,theSuppressor.plus./1000,'-');    plot(expVesssel.x,expVesssel.plus,'x');    plot(theVesssel.x,theVesssel.plus./1000,'-');end%% 全局参数设定function data = paperFontSize()    data = 8;endfunction data = paperFontName()    data = 'Times New Roman';end%% 函数%加载数据function resCell = loadExpDatas(expFileFolder)    expMatDataPath = fullfile(expFileFolder,'expResCell.mat');    %有数据，就加载mat文件，免去重复读取excel    if exist(expMatDataPath,'file')        load(expMatDataPath);        return;    end    %没有mat文件，就加载excel并生成mat文件    excelFilePath = fullfile(expFileFolder,'实验数据汇总.xlsx');    [tmp,tmp,raw] = xlsread(excelFilePath);    startIndex = nan;    endIndex = nan;    count = 1;    for i = 1:size(raw,1)        %找出数据范围        if isnan(raw{i,1})            continue;        end        if strcmp(raw{i,1},'=')            startIndex = i;            continue;        end        if strcmp(raw{i,1},'end')            endIndex = i;            dataCellStruct = loadOneExpData(raw,startIndex,endIndex);            resCell{count,1} = dataCellStruct.name;            resCell{count,2} = dataCellStruct.rawMat;            resCell{count,3} = dataCellStruct.rawCell;            count = count + 1;        end    end    save(expMatDataPath,'resCell');end%提取一个数据function dataCellStruct = loadOneExpData(raw,startIndex,endIndex)    dataCellStruct.name = raw{startIndex,2};%名字    dataCellStruct.rawCell = raw(startIndex+1:endIndex-1,2:end);    dataCellStruct.rawMat = cell2mat(dataCellStruct.rawCell(2:end,1:end));end% 绘制实验压力脉动峰峰值function h = plotFigureExpResult(dataCell,indexPlusMean,indexPlusMax,indexPlusMin,IndexStd,isPlotErrBar)    figure    hold on;    for i = 1:size(dataCell,1)        x = dataCell{i,2}(:,1);        y = dataCell{i,2}(:,indexPlusMean);        err = dataCell{i,2}(:,IndexStd);        minDatas = dataCell{i,2}(:,indexPlusMin);        maxDatas = dataCell{i,2}(:,indexPlusMax);        fillX = [x;flipud(x);x(1)];        fillY = [minDatas;flipud(maxDatas);minDatas(1)];        color = getPlotColor(i);        fill(fillX,fillY,color,'edgealpha',0.3,'FaceAlpha',0.3);        h = plot(x,y,'-','color',color);        if isPlotErrBar            errorbar(x,y,err,'color',color);        end    end    %绘制缓冲罐    ax = axis;    xRang = ax(2) - ax(1);    yRang = ax(4) - ax(3);    fill([2,3,3,2,2],[ax(3),ax(3),ax(4),ax(4),ax(3)],getPlotColor(i+1)...        ,'edgealpha',0.3,'FaceAlpha',0.3);    arrow([4,35],[2.5,30]);    text(4,35,'Suppressor','FontName',paperFontName(),'FontSize',paperFontSize());    count = 1;    for i=1:length(x)        xTickLabel{count} = sprintf('%d',x(i));        count = count + 1;    end    xlabel('measure points','FontName',paperFontName(),'FontSize',paperFontSize());    ylabel(sprintf('peak-peak value of \n pressure plus(kPa)'),'FontName',paperFontName(),'FontSize',paperFontSize());    xlim([0,14]);    set(gca,'XTick',x);    set(gca,'XTickLabel',xTickLabel);    set(gca,'Position',[0.15,0.2,0.75,0.7]);    globalPaperPlotFigureSet_1fig();end% 单幅图片统一设置function globalPaperPlotFigureSet_1fig()    set(gcf,'color','w');    set(gca,'FontName',paperFontName(),'FontSize',paperFontSize());    set(gca,'XColor',[0,0,0]);    set(gca,'YColor',[0,0,0]);    set(gcf,'unit','centimeter','position',[8,4,12,6]);end% 绘制3d频谱以及其阶次function plot3DSpectrumAndOrder(oneVesselDatafullFilePath...    ,perforatedPipeDatafullFilePath...    ,oneVesselMeanDataPath...    ,perforatedPipeMeanDataPath...    ,simulateOneVesselMatDataPath...    ,section)    load(fullfile(oneVesselMeanDataPath,'meanDataStruct.mat'));    oneVesselMeanDataStruct = meanDataStruct;    load(fullfile(perforatedPipeMeanDataPath,'meanDataStruct.mat'));    perforatedPipeMeanDataStruct = meanDataStruct;    %加载模拟数据    load(simulateOneVesselMatDataPath);    simOneVesselDataStruct = dataStruct;    %绘图    figure    % 绘制缓冲罐3d频谱    subplot(7,9,[1,22])    plot3DSpectrum(oneVesselDatafullFilePath,section);    grid on;    box on;    xlabel('frequency(Hz)','FontName',paperFontName(),'FontSize',paperFontSize()...        ,'Rotation',-20.5);    ylabel('measuring points','FontName',paperFontName(),'FontSize',paperFontSize()...        ,'Rotation',20.5);    zlabel('amplitude','FontName',paperFontName(),'FontSize',paperFontSize());    % 绘制孔管3d频谱    subplot(7,9,[6,27])    plot3DSpectrum(perforatedPipeDatafullFilePath,section);    grid on;    box on;    xlabel('frequency(Hz)','FontName',paperFontName(),'FontSize',paperFontSize()...        ,'Rotation',-20.5);    ylabel('measuring points','FontName',paperFontName(),'FontSize',paperFontSize()...        ,'Rotation',20.5);    zlabel('amplitude','FontName',paperFontName(),'FontSize',paperFontSize());    % 绘制2倍频对比,同时绘制误差图    clrBar = [1,118,174            255,116,0]./255;    colormap(clrBar);    subplot(7,9,[38,62])    bar2FreMagData = [oneVesselMeanDataStruct.rawData.multFreMag(2,section)...            ;perforatedPipeMeanDataStruct.rawData.multFreMag(2,section)]';    bar2FreMagDataErr = [perforatedPipeMeanDataStruct.rawData.multFreMagStd(2,section)...            ;perforatedPipeMeanDataStruct.rawData.multFreMagStd(2,section)]';    barHandle = barwitherr(bar2FreMagDataErr,bar2FreMagData);    xlim([0,14]);%     %绘制模拟的结果%     xOneVessel = getBarRealXValue(barHandle,1);%     xOneVessel = xOneVessel(1,:);%     simMag = simOneVesselDataStruct.rawData.multFreMag(2,sectionMap.simOneVesselSectionMap2Exp);%     simMarkClr = getPlotColor(3);%     hold on;%     plot(xOneVessel,simMag,'s'...%             ,'MarkerSize',4 ...%             ,'MarkerEdgeColor',[0,0,0]...%             ,'MarkerFaceColor',simMarkClr...%         );    set(gcf,'color','w');    set(gca,'FontName','Times New Roman','FontSize',12);    set(gcf,'unit','centimeter','position',[8,4,12,10]);end% 绘制通用mat的3d频谱图，并标记1倍频function plot3DSpectrum(matDatafullFilePath,section)    load(matDatafullFilePath);    hold on;    for i = section        plotSpectrum3(dataStruct.rawData.Fre(:,i) ...            ,dataStruct.rawData.Mag(:,i),i,'color',[239,0,0]./255,'isFill',1);    end    colorLine = [0,118,174]./255;    plot3(ones(length(section),1).*dataStruct.input.baseFrequency ...        ,section ...        ,dataStruct.rawData.multFreMag(1,section)...        ,'-o' ...        ,'MarkerSize',2 ...        ,'MarkerEdgeColor',colorLine...        ,'MarkerFaceColor',colorLine...        ,'color',colorLine ...    );    plot3(ones(length(section),1).*dataStruct.input.baseFrequency.*2 ...            ,section ...            ,dataStruct.rawData.multFreMag(2,section)...            ,'-o' ...            ,'MarkerSize',2 ...            ,'MarkerEdgeColor',colorLine...            ,'MarkerFaceColor',colorLine...            ,'color',colorLine ...        );    view(47,42);    xlim([0,50]);    ylim([0,14]);    zlim([0,20]);end% 对于group形式绘制的bar，获取每一组对于的真实x值function x = getBarRealXValue(handlesBar,barGroup)    if verLessThan('matlab', '8.4')        % Original graphics:        x = get(get(handlesBar(barGroup),'children'),'xdata');    else        % New graphics:        x =  handles.bar(barGroup).XData + [handles.bar(barGroup).XOffset];    endendfunction [resN1,resLp1,resDin,resDp1,resVessel,expTheoryResult,expTheoryOneVessel] = getTheoryResult(recalc)    currentPath = fileparts(mfilename('fullpath'));    if recalc        [resN1,resLp1,resDin,resDp1,resVessel,expTheoryResult,expTheoryOneVessel] = fun_vesselInBiasHaveInnerPerfBothClosedComp_ite_perforatedRate();        save(fullfile(currentPath,'resN1.mat'),'resN1');        save(fullfile(currentPath,'resLp1.mat'),'resLp1');        save(fullfile(currentPath,'resDin.mat'),'resDin');        save(fullfile(currentPath,'resDp1.mat'),'resDp1');        save(fullfile(currentPath,'resVessel.mat'),'resVessel');        save(fullfile(currentPath,'expTheoryResult.mat'),'expTheoryResult');        save(fullfile(currentPath,'expTheoryOneVessel.mat'),'expTheoryOneVessel');    else        load(fullfile(currentPath,'resN1.mat'));        load(fullfile(currentPath,'resLp1.mat'));        load(fullfile(currentPath,'resDin.mat'));        load(fullfile(currentPath,'resDp1.mat'));        load(fullfile(currentPath,'resVessel.mat'));        load(fullfile(currentPath,'expTheoryResult.mat'));        load(fullfile(currentPath,'expTheoryOneVessel.mat'));    endendfunction plotTheoryPerforatedRate(resN1,resLp1,resDin,resDp1)    %绘制1.25的脉动抑制率    % 提取数据    perforatedRateN1 = getResCellData(resN1,11);    reduceRateN1Point4 = getResCellDataNum(resN1,8,6);    perforatedRateLp1 = getResCellData(resLp1,11);    reduceRateLp1Point4 = getResCellDataNum(resLp1,8,6);    perforatedRateDin = getResCellData(resDin,11);    reduceRateDinPoint4 = getResCellDataNum(resDin,8,6);    perforatedRateDp1 = getResCellData(resDp1,11);    reduceRateDp1Point4 = getResCellDataNum(resDp1,8,6);    figure    hold on;    plot(perforatedRateN1,reduceRateN1Point4*100,'-','color',getPlotColor(1));    plot(perforatedRateLp1,reduceRateLp1Point4*100,'-','color',getPlotColor(2));    plot(perforatedRateDin,reduceRateDinPoint4*100,'-','color',getPlotColor(3));    plot(perforatedRateDp1,reduceRateDp1Point4*100,'-','color',getPlotColor(4));    ylabel('Inhibition rate(%)','FontName',paperFontName(),'FontSize',paperFontSize());    xlabel('perforated rate','FontName',paperFontName(),'FontSize',paperFontSize());    arrow([0.3,0],[0.35,0.08]);    text(0.2,0,'','FontName',paperFontName(),'FontSize',paperFontSize());    set(gca,'Position',[0.15,0.2,0.75,0.7]);    globalPaperPlotFigureSet_1fig();    % 提取数据    perforatedRateN1 = getResCellData(resN1,11);    reduceRateN1Point13 = getResCellDataNum(resN1,8,40);    perforatedRateLp1 = getResCellData(resLp1,11);    reduceRateLp1Point13 = getResCellDataNum(resLp1,8,40);    perforatedRateDin = getResCellData(resDin,11);    reduceRateDinPoint13 = getResCellDataNum(resDin,8,40);    perforatedRateDp1 = getResCellData(resDp1,11);    reduceRateDp1Point13 = getResCellDataNum(resDp1,8,40);    figure    hold on;    plot(perforatedRateN1,reduceRateN1Point13*100,'-','color',getPlotColor(1));    plot(perforatedRateLp1,reduceRateLp1Point13*100,'-','color',getPlotColor(2));    plot(perforatedRateDin,reduceRateDinPoint13*100,'-','color',getPlotColor(3));    plot(perforatedRateDp1,reduceRateDp1Point13*100,'-','color',getPlotColor(4));    ylabel('Inhibition rate(%)','FontName',paperFontName(),'FontSize',paperFontSize());    xlabel('perforated rate','FontName',paperFontName(),'FontSize',paperFontSize());    arrow([0.3,0],[0.35,0.08]);    text(0.2,0,'','FontName',paperFontName(),'FontSize',paperFontSize());    set(gca,'Position',[0.15,0.2,0.75,0.7]);    globalPaperPlotFigureSet_1fig();endfunction datas = getResCellData(resCell,index)    datas = [];    count = 1;    for i = 2:(size(resCell,1)-1)        datas(count) = resCell{i,index};        count = count + 1;    endendfunction datas = getResCellDataNum(resCell,index,indexNum)    datas = [];    count = 1;    for i = 2:(size(resCell,1)-1)        datas(count) = resCell{i,index}(indexNum);        count = count + 1;    endend